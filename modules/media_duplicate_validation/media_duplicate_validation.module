<?php

/**
 * @file
 * Contains media_duplicate_validation.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_help().
 */
function media_duplicate_validation_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the media_duplicate_validation module.
    case 'help.page.media_duplicate_validation':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Media Validation plugins to help prevent duplication of media items') . '</p>';
      return $output;

    default:
  }
}

function media_duplicate_validation_test_images() {
  /** @var \Drupal\media_duplicate_validation\Plugin\MediaDuplicateValidationManager $duplicate_manager */
  $duplicate_manager = \Drupal::service('plugin.manager.media_duplicate_validation');

  $image = 'public://media/image/small_lake.jpg';

  foreach ($duplicate_manager->getDefinitions() as $definition) {
    /** @var \Drupal\media_duplicate_validation\Plugin\MediaDuplicateValidationInterface $plugin */
    $plugin = $duplicate_manager->createInstance($definition['id']);
    dpm(($definition['id']));
    dpm($plugin->isUnique($image));
    dpm($plugin->getSimilarItems($image));
  }

  //  $small = 'public://media/image/small_lake.jpg';
  //  $large = 'public://media/image/lake_0.jpg';
  //  $color_mean = new \Drupal\media_duplicate_validation\Plugin\MediaDuplicateValidation\ColorMean();
  //  dpm($color_mean->compare($small, $large));
  //
  //  $john = 'public://media/capx/john-bickar1509507710422.jpg';
  //  dpm($color_mean->compare($john, $large));
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function media_duplicate_validation_media_insert(EntityInterface $entity) {
  /** @var \Drupal\media_duplicate_validation\Plugin\MediaDuplicateValidationManager $duplicate_manager */
  $duplicate_manager = \Drupal::service('plugin.manager.media_duplicate_validation');

  foreach ($duplicate_manager->getDefinitions() as $definition) {
    /** @var \Drupal\media_duplicate_validation\Plugin\MediaDuplicateValidationInterface $plugin */
    $plugin = $duplicate_manager->createInstance($definition['id']);
    $plugin->mediaSave($entity);
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function media_duplicate_validation_media_update(EntityInterface $entity) {
  media_duplicate_validation_media_insert($entity);
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function media_duplicate_validation_media_delete(EntityInterface $entity) {
  /** @var \Drupal\media_duplicate_validation\Plugin\MediaDuplicateValidationManager $duplicate_manager */
  $duplicate_manager = \Drupal::service('plugin.manager.media_duplicate_validation');

  foreach ($duplicate_manager->getDefinitions() as $definition) {
    /** @var \Drupal\media_duplicate_validation\Plugin\MediaDuplicateValidationInterface $plugin */
    $plugin = $duplicate_manager->createInstance($definition['id']);
    $plugin->mediaDelete($entity);
  }
}
