<?php

/**
 * @file
 * stanford_media.module
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Render\FormattableMarkup;
use Drupal\editor\Entity\Editor;
use Drupal\stanford_media\Form\MediaLibraryFileUploadForm;
use Drupal\stanford_media\Form\MediaLibraryGoogleFormForm;
use Drupal\stanford_media\Form\MediaLibraryEmbeddableForm;

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function stanford_media_field_widget_text_textarea_form_alter(&$element, FormStateInterface $form_state, $context) {
  // Adds the library outside of ckeditor iframe.
  $element['#attached']['library'][] = 'stanford_media/admin';
}

/**
 * Implements hook_ckeditor_css_alter().
 */
function stanford_media_ckeditor_css_alter(array &$css, Editor $editor) {
  // Adds styles inside the ckeditor iframe.
  $css[] = drupal_get_path('module', 'stanford_media') . '/css/stanford_media.admin.css';
  $css[] = drupal_get_path('module', 'stanford_media') . '/css/stanford_media.css';
}

/**
 * Implements hook_theme_registry_alter().
 */
function stanford_media_theme_registry_alter(&$theme_registry) {
  // Register the path to the template files.
  $path = drupal_get_path('module', 'stanford_media') . '/templates';
  $theme_registry['dropzonejs']['path'] = $path;
  $theme_registry['filter_caption']['path'] = $path;
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function stanford_media_media_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if (empty($build['#embed']) || !$build['#embed']) {
    return;
  }

  foreach (_stanford_media_get_dialog_plugins($entity) as $plugin) {
    $plugin->embedAlter($build, $entity);
  }
  $build['#attached']['library'][] = 'stanford_media/display';
}

/**
 * Get a list of all plugins applicable for the entity.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The media entity to check for plugins.
 *
 * @return \Drupal\stanford_media\Plugin\MediaEmbedDialogInterface[]
 *   Array of applicable plugins.
 *
 * @throws \Drupal\Component\Plugin\Exception\PluginException
 */
function _stanford_media_get_dialog_plugins(EntityInterface $entity) {
  $plugins = [];
  /** @var \Drupal\stanford_media\Plugin\MediaEmbedDialogManager $dialog_manager */
  $dialog_manager = \Drupal::service('plugin.manager.media_embed_dialog_manager');
  foreach (array_keys($dialog_manager->getDefinitions()) as $plugin_id) {
    /** @var \Drupal\stanford_media\Plugin\MediaEmbedDialogInterface $plugin */
    $plugin = $dialog_manager->createInstance($plugin_id, ['entity' => $entity]);

    if ($plugin->isApplicable()) {
      $plugins[$plugin_id] = $plugin;
    }
  }
  return $plugins;
}

/**
 * Implements hook_media_source_info_alter().
 */
function stanford_media_media_source_info_alter(array &$sources) {
  $sources['audio_file']['forms']['media_library_add'] = MediaLibraryFileUploadForm::class;
  $sources['file']['forms']['media_library_add'] = MediaLibraryFileUploadForm::class;
  $sources['image']['forms']['media_library_add'] = MediaLibraryFileUploadForm::class;
  $sources['video_file']['forms']['media_library_add'] = MediaLibraryFileUploadForm::class;
  $sources['google_form']['forms']['media_library_add'] = MediaLibraryGoogleFormForm::class;
  $sources['embeddable']['forms']['media_library_add'] = MediaLibraryEmbeddableForm::class;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function stanford_media_preprocess_dropzonejs(&$variables) {
  // Adds additional things to the template for the dropzone js widget.
  $variables['allowed_files'] = str_replace(' ', ', ', $variables['element']['#extensions']);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function stanford_media_preprocess_media(&$variables) {

  /** @var \Drupal\media\MediaInterface $media */
  $media = $variables['media'];
  if ($media->getSource()->getPluginId() != 'file') {
    return;
  }
  $media_type = \Drupal::entityTypeManager()->getStorage('media_type')->load($media->bundle());
  $source_field = $media->getSource()->getSourceFieldDefinition($media_type)->getName();

  if (empty($variables['content'][$source_field][0]['#description'])) {
    $variables['content'][$source_field][0]['#description'] = $variables['name'];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function stanford_media_form_media_embeddable_add_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $source_config = $form_state
    ->getFormObject()
    ->getEntity()
    ->getSource()
    ->getConfiguration();
  $source_field = $source_config['oembed_field_name'];
  $new_desc = 'Allowed providers: @providers. For custom embeds, please <a href="@snow_form">request support.</a>';
  $args = $form[$source_field]['widget'][0]['value']['#description']->getArguments();
  $args['@snow_form'] = 'https://stanford.service-now.com/it_services?id=sc_cat_item&sys_id=83daed294f4143009a9a97411310c70a';
  $form[$source_field]['widget'][0]['value']['#description'] = new FormattableMarkup($new_desc, $args);

}
