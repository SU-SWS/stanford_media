<?php

/**
 * @file
 * stanford_media.module
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\editor\EditorInterface;
use Drupal\stanford_media\Plugin\audio_embed_field\Provider\StanfordSoundCloud;

/**
 * Implements hook_theme_registry_alter().
 */
function stanford_media_theme_registry_alter(&$theme_registry) {
  // Register the path to the template files.
  $path = drupal_get_path('module', 'stanford_media') . '/templates';
  $theme_registry['responsive_image_formatter']['path'] = $path;
  $theme_registry['dropzonejs']['path'] = $path;
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function stanford_media_media_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if (empty($build['#embed']) || !$build['#embed']) {
    return;
  }

  foreach (_stanford_media_get_dialog_plugins($entity) as $plugin) {
    $plugin->embedAlter($build, $entity);
  }
}

/**
 * @param $entity
 *
 * @return \Drupal\stanford_media\Plugin\MediaEmbedDialogInterface[]
 * @throws \Drupal\Component\Plugin\Exception\PluginException
 */
function _stanford_media_get_dialog_plugins($entity) {
  $plugins = [];
  /** @var \Drupal\stanford_media\Plugin\MediaEmbedDialogManager $dialog_manager */
  $dialog_manager = \Drupal::service('plugin.manager.media_embed_dialog_manager');
  foreach (array_keys($dialog_manager->getDefinitions()) as $plugin_id) {
    /** @var \Drupal\stanford_media\Plugin\MediaEmbedDialogInterface $plugin */
    $plugin = $dialog_manager->createInstance($plugin_id, ['entity' => $entity]);

    if ($plugin->isApplicable()) {
      $plugins[] = $plugin;
    }
  }
  return $plugins;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function stanford_media_preprocess_dropzonejs(&$variables) {
  // Adds additional things to the template for the dropzone js widget.
  $variables['allowed_files'] = str_replace(' ', ', ', $variables['element']['#extensions']);
  $url = Url::fromRoute('stanford_media.bulk_upload');
  $link = Link::fromTextAndUrl('click here', $url)->toRenderable();
  $link['#attributes']['target'] = '_blank';

  // Only add the help text if you are limited with how many files you can add.
  if ($variables['element']['#max_files']) {
    $variables['help_text'] = t('To bulk upload to the media library %link', ['%link' => render($link)]);
  }
}

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 */
function stanford_media_inline_entity_form_entity_form_alter(&$entity_form, FormStateInterface $form_state) {
  $object = $form_state->getBuildInfo()['callback_object'];
  if ($object instanceof EntityBrowserFormInterface && !empty($entity_form['name'])) {
    // Adds a description for inline entity forms within the media browser.
    $entity_form['name']['widget'][0]['value']['#description'] = t('This name will make it easy to find later in the library.');
  }
}

/**
 * Implements hook_preprocess_image_widget().
 */
function stanford_media_preprocess_image_widget(&$variables) {
  if (isset($variables['data']['focal_point']) && !empty($variables['data']['preview'])) {
    // Adds some focal point help text.
    $variables['data']['preview']['help'] = [
      '#prefix' => '<div class="focal-point-help-text description">',
      '#suffix' => '</div>',
      '#markup' => t('To set the focal point (the central focus area) of the image, click and drag the “+” on the image. If no focal point is set, the focal point will default to the center of the image.'),
    ];
  }
}

/**
 * Implements hook_ckeditor_css_alter().
 */
function stanford_media_ckeditor_css_alter(array &$css, EditorInterface $editor) {
  // Add special styles to wysiwyg embeded videos.
  $css[] = drupal_get_path('module', 'stanford_media') . '/css/stanford_media.embed_preview.css';
}

/**
 * Implements hook_audio_embed_field_provider_info_alter().
 */
function stanford_media_audio_embed_field_provider_info_alter(&$definitions) {
  $definitions['soundcloud']['class'] = StanfordSoundCloud::class;
}
